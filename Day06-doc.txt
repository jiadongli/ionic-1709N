WEBAPP Day06

1. Ionic 跨域，代理的设置进行简化
    1.1 app-demo/ionic.config.json
    1.2 proxies: [
            {
                "path": "/",
                "proxyUrl": "http://127.0.0.1:3000/"
            }
        ]

2. 请求路径参数(path parameters)的获取
    2.1 发送 /products/1
    2.1 获取
        a. app.get('/products/:page', (req, res) => {});
        b. req.params.page

3. 在 index.html 中，添加无限滚动的视图组件
    <ion-infinite-scroll (ionInfinite)="loadMoreData($event)">
        <ion-infinite-scroll-content>
        </ion-infinite-scroll-content>
    </ion-infinite-scroll>

4. 在 index.ts 中，定义 loadMoreData 函数
    再次请求服务器，获取下一页数据
    loadMoreData(event): void {
        let url = `/products/${++this.page}`;
        this.httpClient.get(url)
          .subscribe(
            res => {
              this.products = this.products.concat(res);
            },
            err => {
              console.error(err);
            }
          );
      }

5. 在 index.ts 中，定义 page 变量属性

6. thumbnail list

7. list > cards

8. 无限滚动的一个问题：
   数据全部加载之后，无限滚动还会继续请求数据，会加重服务器负担

9. 在 index.ts 中定义属性 hasMoreData:boolean = true;

10. 在 index.ts 中，每次加载新数据时，判断数据是否全部加载完毕
    如果加载完毕，把 hasMoreData 赋值为 false

11. 在 index.html 中，为 ion-infinite-scroll 添加属性
    *ngIf="hasMoreData"

12. 不做"多余"的一次请求
    请求数据时传回总页数，当前页码等于总页数，hasMoreData = false
    数据库的视图 view

13. 创建商品详情页面
    app-demo/ ionic g page product

14. 为商品列表中的商品添加轻点事件
    <div (tap)="productPage(product.id)" ...

15. 在 index.ts 中，定义函数 productPage
    productPage(productId):void {
        this.navCtrl.push('ProductPage', {productId:productId});
    }

16. 页面跳转的同时传递参数
    this.navCtrl.push('ProductPage', {productId:productId});

17. 传参之后，取得参数的方式
    在 product.ts 中
    this.navParams.get('productId');

18. 在商品详情页中展示商品的图片，横向滚动

19. 修改 db.sql，新建 picture 表，外键 productId

20. 更新了 Node.js 版本：
    客户端启动时可以运行，之后退出
    event.js:183
        throw er: // Unhandled 'error' event
    Error: spawn "C:\Program Files\nodejs\node.exe" ENOENT
        at...
        at...
    解决：File-Settings-Editor-File Encodings
         把右侧所有的 Encoding 设置为 UTF-8
         OK

21. 在 product.ts 文件，发起请求查询当前商品的展示图片数组 pictures

22. 在 app.js 中，接收请求，把 res 赋值给属性 pictures

23. 在 product.html 中，展示商品图片的横向视图

24. 练习：完成商品详情页


























































