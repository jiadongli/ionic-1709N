WEBAPP Day05

1. Ionic 的 lazy loading 懒加载
    1.1 Node.js 是 V8.9.4
    1.2 全局模块 inoic cordova，项目模块均以 npm 方式安装


2. localhost 拒绝了我们的连接请求

3. lazy loading
    3.1 创建新页面：ionic g page test
    3.2 修改 home.ts 定义函数
        其中 push 函数的参数时页面导出类的类名字符串
        toTestPage():void {
            this.navCtrl.push('TestPage'); // *****
        }
    3.3 修改 home.html，添加按钮
        <button ... (tap)="toTestPage()" ...>Test Page</button>

4. lazy loading
   在用户访问某个页面时，这个页面才进行加载

5. HomePage 改成 lazy loading
   5.1 在 home/ 下创建一个文件 home.module.ts
   5.2 修改 home/home.ts 文件
       import IonicPage
       @IonicPage()
   5.3 修改 app/app.module.ts 文件
       删除 HomePage 的引入
   5.4 修改 app/app.component.ts 文件
       删除 HomePage 的引入
       rootPage:any = 'HomePage';

6. 用户登录的实现
   6.1 在 home.ts 定义 user 对象
   6.2 在 home.html 表单数据的双向绑定
   6.3 在 home.ts 定义登录提交的处理函数 signIn() {}
   6.4 在 home.html 为登录按钮添加事件响应
   6.5 在 app.js 中，接收登录的 post 请求，路径 /signIn
   6.6 在 home.ts 中，发送登录请求 HttpClient
       a. 引入 HttpClient
       b. 依赖注入 httpClient
       c. 使用 this.httpClient 发送登录的 post 请求
   6.7 跨域问题，修改 ionic.config.json，添加代理
   6.8 在 app.js 中，具体处理请求
   6.9 在 home.ts 中接收响应，并做处理

7. InfiniteScroll
    7.1 在 index.ts 中定义 items 数组，在构造器中初始化
    7.2 在 index.html 中创建视图组件 ion-list
    7.3 在 index.html 中创建视图组件 ion-infinite-scroll
    7.4 在 index.ts 中定义无限滚动事件的处理函数














































